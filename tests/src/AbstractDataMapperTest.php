<?php

namespace SimpleORM;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-12-09 at 18:42:14.
 */
class AbstractDataMapperTest extends \PHPUnit_Framework_TestCase
{

	
	/**
	 * @var AbstractDataMapper
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = $this->getMockBuilder('SimpleORM\AbstractDataMapper')
						//->disableOriginalConstructor()//можно отключать
//						->setConstructorArgs([
//							$DI, 
//							$adapter
//								])//в конструктор
						->disableOriginalConstructor()
						//->setMethods(null)
						->setMethods(['setMappingFields','createEntity'])
						//->setMethods(null) //не использовать заглушки методов иначе буде возвращать NULL
						->getMock();
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		
	}
	
	/**
	 * @covers SimpleORM\AbstractDataMapper::AddMappingField
	 */
	public function testAddMappingField_SimpleField(){
		
		\TestHelper::callMethod($this->object,'addMappingField',['myfield']);
		
		$correct = [
			  'myfield'	=>	[
				  'field'	=>	'myfield'
			  ]
		  ];
		
		//-----------------
		$mapping_fields = \TestHelper::getProtectedAttribute($this->object,'mapping_fields');

        $this->assertEquals($mapping_fields, $correct);		
	}		
	
	/**
	 * @covers SimpleORM\AbstractDataMapper::AddMappingField
	 */
	public function testAddMappingField_FieldAndAlias(){
		
		\TestHelper::callMethod($this->object,'addMappingField',['myfield','tb_mayfield']);
		
		$correct = [
			  'myfield'	=>	[
				  'field'	=>	'tb_mayfield'
			  ]
		  ];
		
		//-----------------
		$mapping_fields = \TestHelper::getProtectedAttribute($this->object,'mapping_fields');

        $this->assertEquals($mapping_fields, $correct);		
	}		

	/**
	 * @covers SimpleORM\AbstractDataMapper::AddMappingField
	 */
	public function testAddMappingField_ArrayField(){
		
		\TestHelper::callMethod($this->object,'addMappingField',['myfield',[
			'field'	=>	'tb_mayfield'
		]]);
		
		$correct = [
			  'myfield'	=>	[
				  'field'	=>	'tb_mayfield'
			  ]
		  ];
		
		//-----------------
		$mapping_fields = \TestHelper::getProtectedAttribute($this->object,'mapping_fields');

        $this->assertEquals($mapping_fields, $correct);		
	}	
	
	/**
	 * @covers SimpleORM\AbstractDataMapper::AddMappingField
	 */
	public function testAddMappingField_PrimaryKey(){
		
		\TestHelper::callMethod($this->object,'addMappingField',['myfield',[
			'field'		=>	'tb_mayfield',
			'primary'	=>	true
		]]);
		
		$correct = [
			  'myfield'	=>	[
				  'field'	=>	'tb_mayfield',
				  'primary'	=>	true
			  ]
		  ];
		
		//-----------------
		$mapping_fields = \TestHelper::getProtectedAttribute($this->object,'mapping_fields');

        $this->assertEquals($mapping_fields, $correct);		
		
		$key_field = \TestHelper::getProtectedAttribute($this->object,'key');
		$this->assertEquals($key_field, 'tb_mayfield');	
	}	
	
	/**
	 * @covers SimpleORM\AbstractDataMapper::AddMappingField
	 */
	public function testAddMappingField_SoftDelete(){
		
		\TestHelper::callMethod($this->object,'addMappingField',['myfield',[
			'field'			=>	'tb_mayfield',
			'softdelete'	=>	true
		]]);
		
		$correct = [
			  'myfield'	=>	[
				  'field'	=>	'tb_mayfield',
				  'softdelete'	=>	true
			  ]
		  ];
		
		//-----------------
		$mapping_fields = \TestHelper::getProtectedAttribute($this->object,'mapping_fields');

        $this->assertEquals($mapping_fields, $correct);		
		
		$soft_delete_key = \TestHelper::getProtectedAttribute($this->object,'soft_delete_key');
		$this->assertEquals($soft_delete_key, 'tb_mayfield');	
	}	
	
	/**
	 * @covers SimpleORM\AbstractDataMapper::getAdapter
	 * @todo   Implement testGetAdapter().
	 */
	public function testGetAdapter()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers SimpleORM\AbstractDataMapper::setAdapter
	 * @todo   Implement testSetAdapter().
	 */
	public function testSetAdapter()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers SimpleORM\AbstractDataMapper::findById
	 * @todo   Implement testFindById().
	 */
	public function testFindById()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers SimpleORM\AbstractDataMapper::save
	 * @todo   Implement testSave().
	 */
	public function testSave()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers SimpleORM\AbstractDataMapper::getFieldAlias
	 * @todo   Implement testGetFieldAlias().
	 */
	public function testGetFieldAlias()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers SimpleORM\AbstractDataMapper::findBySpecification
	 * @todo   Implement testFindBySpecification().
	 */
	public function testFindBySpecification()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers SimpleORM\AbstractDataMapper::delete
	 * @todo   Implement testDelete().
	 */
	public function testDelete()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers SimpleORM\AbstractDataMapper::findAllBySpecification
	 * @todo   Implement testFindAllBySpecification().
	 */
	public function testFindAllBySpecification()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers SimpleORM\AbstractDataMapper::findAll
	 * @todo   Implement testFindAll().
	 */
	public function testFindAll()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers SimpleORM\AbstractDataMapper::useJoins
	 * @todo   Implement testUseJoins().
	 */
	public function testUseJoins()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers SimpleORM\AbstractDataMapper::withDelete
	 * @todo   Implement testWithDelete().
	 */
	public function testWithDelete()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}
}
